{"version":3,"sources":["Card.js","Contacts.js","App.js","Title.js","reportWebVitals.js","index.js"],"names":["CardBody","props","className","src","data","photo","alt","onError","e","target","onerror","firstName","lastName","Card","contactData","Contacts","state","contacts","fetch","then","result","json","setState","card","this","map","row","id","type","style","height","Component","App","Title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEMA,EAAW,SAACC,GACd,OACI,sBAAKC,UAAU,yBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oCAAf,SACI,qBAAKA,UAAU,0BACXC,IAAKF,EAAMG,KAAKC,MAChBC,IAAI,GACJC,QAAS,SAAAC,GACLA,EAAEC,OAAOC,SAAU,EACnBF,EAAEC,OAAON,IAAM,kFAI3B,qBAAKD,UAAU,+BAAf,SACI,oBAAGA,UAAU,oBAAb,UAAkCD,EAAMG,KAAKO,UAA7C,IAAyDV,EAAMG,KAAKQ,iBAG5E,qBAAKV,UAAU,MAAf,SACI,uCAEJ,qBAAKA,UAAU,MAAf,SACI,2CAeDW,EATF,SAACZ,GAAW,IACba,EAAgBb,EAAhBa,YACR,OACI,qBAAKZ,UAAU,aAAf,SACI,cAAC,EAAD,CAAUE,KAAMU,OCKbC,E,4MAnCXC,MAAQ,CACJC,SAAU,I,uDAGd,WAAqB,IAAD,OAGhBC,MAFY,qDAGPC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACH,EAAKE,SAAS,CACVL,SAAUG,EAAOhB,Y,oBAKjC,WACI,IAAMmB,EAAOC,KAAKR,MAAMC,SAASQ,KAAI,SAACC,GAClC,OACI,qBAAKxB,UAAU,mCAAf,SACI,cAAC,EAAD,CAAMY,YAAaY,KADgCA,EAAIC,OAKnE,OACI,sBAAKzB,UAAU,MAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,wBAAQ0B,KAAK,SAAS1B,UAAU,sCAAsC2B,MAAO,CAAEC,OAAQ,QAAvF,mBAEFP,S,GA9BKQ,aCWRC,E,4JATb,WACE,OACE,qBAAK9B,UAAU,+BAAf,SACE,cAAC,EAAD,U,GAJU6B,aCQHE,E,4JATX,WACI,OACI,qBAAK/B,UAAU,QAAf,SACI,+C,GAJI6B,aCULG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38c53e3e.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst CardBody = (props) => {\r\n    return (\r\n        <div className=\"card-body p-2 max-card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-4 col-lg-4 pl-3 pr-0\">\r\n                    <img className=\"img-thumbnail img-w-100\"\r\n                        src={props.data.photo}\r\n                        alt=\"\"\r\n                        onError={e => {\r\n                            e.target.onerror = false\r\n                            e.target.src = 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-8 col-md-8 col-lg-8 pl-2\">\r\n                    <p className=\"py-3 contact-name\">{props.data.firstName} {props.data.lastName}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <h1>Euy</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <h1>Euy</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Card = (props) => {\r\n    const { contactData } = props\r\n    return (\r\n        <div className=\"card hover\">\r\n            <CardBody data={contactData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport Card from './Card'\r\n\r\nclass Contacts extends Component {\r\n    state = {\r\n        contacts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = \"https://simple-contact-crud.herokuapp.com/contact\"\r\n\r\n        fetch(url)\r\n            .then((result) => result.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    contacts: result.data,\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const card = this.state.contacts.map((row) => {\r\n            return (\r\n                <div className=\"col-6 col-sm-6 col-md-3 col-lg-3\" key={row.id}>\r\n                    <Card contactData={row} />\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-6 col-sm-6 col-md-3 col-lg-3\">\r\n                    <button type=\"button\" className=\"btn btn-block btn-outline-secondary\" style={{ height: '65px' }}>New</button>\r\n                </div>\r\n                { card}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts","import React, { Component } from \"react\"\nimport './App.css'\nimport Contacts from './Contacts'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container container-sm-fluid\">\n        <Contacts />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\n\r\nclass Title extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"title\">\r\n                <h4>Contact</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Title from './Title'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Title />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}